{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAmE;;;;;ICuCnE,0EACE;IAAA,2EAA0G;IAAA,uDACrF;IAAA,4DAAO;IAC5B,2EAA+B;IAAA,wEAAa;IAAA,4DAAO;IACnD,2EAA6F;IAAA,uDAA6B;IAAA,4DAAO;IACnI,4DAAM;;;IAJwC,0DAA6D;IAA7D,mLAA6D;IAAC,0DACrF;IADqF,2GACrF;IAEU,0DAA6D;IAA7D,mLAA6D;IAAC,0DAA6B;IAA7B,0GAA6B;;;IAE5H,yEACmF;IAAA,uFACnF;IAAA,4DAAK;;;IACL,yEACmF;IAAA,uFACnF;IAAA,4DAAK;;;IACL,yEACqF;IAAA,8EACrF;IAAA,4DAAK;;;IACL,yEAA4F;IAAA,kGAC7E;IAAA,4DAAK;;;;;;IAElB,6EAIS;IAF4E,sVAAqB;IAE1G,4DAAS;;;IAJiE,sFAA0B;;ADlD/F,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;QAE1B,aAAQ,GAAG,IAAI,CAAC;QAChB,WAAM,GAAiB,EAAE,CAAC;QAC1B,iBAAY,GAAe,IAAI,CAAC;QAChC,eAAU,GAAW,CAAC,CAAC;QACvB,WAAM,GAAG,KAAK,CAAC;QACf,iBAAY,GAAG,EAAE,CAAC;QAElB,WAAM,GAAW,CAAC,CAAC;QACnB,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAW,CAAC,CAAC;QAE3B,eAAU,GAAG,cAAc,CAAC;KAkJ7B;IA5IC,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;IACtC,CAAC;IAED,KAAK,CAAC,UAAsB;QAC1B,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;YAEzB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAE/H,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC9B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE;oBAC5F,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAClC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAE3B,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;oBACpC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;oBAE7B,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,EAAE;wBACrC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;wBAClE,UAAU,GAAG,IAAI,CAAC;wBAClB,IAAI,CAAC,UAAU,GAAG,CAAC;qBACpB;oBAED,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;qBACI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE;oBACjG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;iBACrB;qBACI;oBACH,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;wBACxB,UAAU,GAAG,KAAK;qBACnB;iBACF;aACF;SACF;aACI;YACH,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,EAAE;gBACrC,IAAI,UAAU,KAAK,KAAK,EAAE;oBACxB,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;iBACvD;aACF;YAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;YACjF,IAAI,UAAU,CAAC,QAAQ,KAAK,KAAK,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;aAChI;YACD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACrB;QAED,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,IAAI,CAAC;SACb;aACI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,YAAY,CAAC,kBAAkB;QAC7B,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,kBAAkB;QAEzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,aAAa,GAAa,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;QAC9E,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE3B,IAAI,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE9B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,kBAAkB,EAAE,KAAK,EAAE,EAAE;YACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,mBAAmB,MAAM,OAAO,CAAC,CAAC,CAAC;YACzF,IAAI,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;gBACnB,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;aAC3B;SACF;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1B,CAAC;IAED,iBAAiB,CAAC,UAAU;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED,kBAAkB,CAAC,kBAAkB;QACnC,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,OAAO,GAAG,CAAC,MAAM,GAAG,kBAAkB,EAAE;YACtC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACxC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,8EAA8E;IAC9E,iBAAiB;QACf,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE;YACrD,OAAO,KAAK,CAAC;SACd;aACI,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE;YAC1D,OAAO,KAAK,CAAC;SACd;aACI,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE;YAC1D,OAAO,KAAK,CAAC;SACd;aACI;YACH,OAAO,MAAM;SACd;IACH,CAAC;IAED,KAAK,CAAC,EAAU;QACd,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;;wEA/JU,YAAY;4FAAZ,YAAY;4IAAZ,oBACZ;;QCRD,yEACE;QAAA,oEACA;QAAA,2EAA+D;QAAA,2EAAgB;QAAA,4DAAQ;QACvF,4EAEE;QAAA,qEAAyC;QAC3C,4DAAS;QACT,yEACE;QAAA,wEACE;QAAA,yEACE;QAAA,4EAEE;QAAA,0FACF;QAAA,4DAAS;QACT,0EACE;QAAA,6EAAgF;QAAnD,0IAAS,kCAA8B,IAAC;QAAW,qEAAS;QAAA,4DAAQ;QACjG,6EAAgF;QAAnD,0IAAS,kCAA8B,IAAC;QAAW,qEAAS;QAAA,4DAAQ;QACjG,6EAAgF;QAAnD,0IAAS,kCAA8B,IAAC;QAAW,qEAAS;QAAA,4DAAQ;QACnG,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,6EAEE;QAAA,wDACF;QAAA,4DAAS;QACT,0EACE;QAAA,6EACwB;QADK,0IAAS,uCAAmC,IAAC;QAClD,wEAAY;QAAA,4DAAQ;QAC5C,6EACuB;QADM,0IAAS,uCAAmC,IAAC;QACnD,uEAAW;QAAA,4DAAQ;QAC5C,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,8EACmC;QAAjC,qIAAS,8BAAsB,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACtD,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,2GACE;QAKF,yGACmF;QAEnF,yGACmF;QAEnF,yGACqF;QAErF,yGAA4F;QAE5F,2EACE;QAAA,iHAIA;QACF,4DAAM;;QA/C0E,2DAAS;QAAT,kEAAS;QACT,0DAAS;QAAT,kEAAS;QACT,0DAAS;QAAT,kEAAS;QAM/E,0DACF;QADE,0FACF;QAGI,0DAAqB;QAArB,8EAAqB;QAErB,0DAAoB;QAApB,6EAAoB;QAUkB,0DAAoC;QAApC,kGAAoC;QAOpF,0DAAgF;QAAhF,0JAAgF;QAGhF,0DAAgF;QAAhF,0JAAgF;QAGhF,0DAAkF;QAAlF,4JAAkF;QAEvC,0DAA8C;QAA9C,gHAA8C;QAE5C,0DAAmC;QAAnC,2FAAmC;QAClC,0DAA2B;QAA3B,+EAA2B;;6FDlD9D,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;gBAqBC,QAAQ;kBADP,0DAAY;mBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;AA+IpC,MAAM,UAAU;IAErB,YAAY,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI;QAWxC,aAAQ,GAAY,KAAK,CAAC;QAVxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CAOF;;;;;;;;;;;;;AEvLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;;AAaxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;6FAKP,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, HostListener, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'JungscharMemory';\n\n  umdrehen = true;\n  karten: MemoryCard[] = [];\n  previousCard: MemoryCard = null;\n  clickCount: number = 0;\n  finish = false;\n  currentLevel = 20;\n\n  player: number = 1;\n  playerOneScore: number = 0;\n  playerTwoScore: number = 0;\n\n  spielmodus = 'Singleplayer';\n\n  public innerWidth: any;\n\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.innerWidth = window.innerWidth;\n    this.getButtonDivWidth();\n  }\n\n  ngOnInit(): void {\n    this.initGame(20)\n    this.innerWidth = window.innerWidth;\n  }\n\n  click(memoryCard: MemoryCard) {\n    let skipPlayer = false;\n    if (this.clickCount !== 2) {\n\n      this.clickCount++;\n      this.karten.filter(x => x.id === memoryCard.id)[0].aufgedeckt = !this.karten.filter(x => x.id === memoryCard.id)[0].aufgedeckt;\n\n      if (this.previousCard !== null) {\n        if (this.previousCard.paarNr === memoryCard.paarNr && memoryCard.id !== this.previousCard.id) {\n          this.previousCard.gefunden = true;\n          memoryCard.gefunden = true;\n\n          this.previousCard.aufgedeckt = true;\n          memoryCard.aufgedeckt = true;\n\n          if (this.spielmodus === 'Multiplayer') {\n            this.player === 1 ? this.playerOneScore++ : this.playerTwoScore++;\n            skipPlayer = true;\n            this.clickCount = 0\n          }\n\n          this.checkFinish();\n        }\n        else if (this.previousCard.paarNr === memoryCard.paarNr && memoryCard.id === this.previousCard.id) {\n          this.clickCount = 1;\n        }\n        else {\n          if (this.clickCount == 2) {\n            skipPlayer = false\n          }\n        }\n      }\n    }\n    else {\n      if (this.spielmodus === 'Multiplayer') {\n        if (skipPlayer === false) {\n          this.player === 1 ? this.player = 2 : this.player = 1;\n        }\n      }\n\n      this.karten.filter(x => x.gefunden === false).forEach(x => x.aufgedeckt = false);\n      if (memoryCard.gefunden === false) {\n        this.karten.filter(x => x.id === memoryCard.id)[0].aufgedeckt = !this.karten.filter(x => x.id === memoryCard.id)[0].aufgedeckt;\n      }\n      this.clickCount = 1;\n    }\n\n    this.previousCard = memoryCard;\n  }\n\n  checkFinish() {\n    if (this.karten.filter(x => x.gefunden === false).length === 0) {\n      this.finish = true;\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  levelChanged(anzahlMemoryKarten) {\n    this.currentLevel = anzahlMemoryKarten;\n    this.initGame(anzahlMemoryKarten)\n  }\n\n  initGame(anzahlMemoryKarten) {\n\n    this.player = 1;\n    this.playerOneScore = 0;\n    this.playerTwoScore = 0;\n    this.clickCount = 0;\n    this.finish = false;\n\n    this.karten = [];\n\n    let randomNumbers: number[] = this.generateRandomPics(anzahlMemoryKarten / 2);\n    console.log(randomNumbers);\n\n    let paarNr = randomNumbers[0];\n\n    for (let index = 0; index < anzahlMemoryKarten; index++) {\n      this.karten.push(new MemoryCard(index, paarNr, false, `url(../assets/PB${paarNr}.jpg)`));\n      if (index % 2 === 1) {\n        randomNumbers.shift();\n        paarNr = randomNumbers[0];\n      }\n    }\n    this.karten.sort(() => Math.random() - 0.5);\n    this.getLevel();\n\n    console.log(this.karten)\n  }\n\n  spielmodusChanged(spielmodus) {\n    this.spielmodus = spielmodus;\n    this.initGame(this.currentLevel);\n  }\n\n  generateRandomPics(randomNumbersCount) {\n    var arr: number[] = [];\n    while (arr.length < randomNumbersCount) {\n      var r = Math.floor(Math.random() * 30) + 1;\n      if (arr.indexOf(r) === -1) arr.push(r);\n    }\n    return arr;\n  }\n\n  getLevel() {\n    return this.currentLevel;\n  }\n\n  // Calculate the width of the div for the Memory Card depending on window size\n  getButtonDivWidth() {\n    if (this.currentLevel == 20 && this.innerWidth > 1000) {\n      return '50%';\n    }\n    else if (this.currentLevel == 40 && this.innerWidth > 1400) {\n      return '60%';\n    }\n    else if (this.currentLevel == 60 && this.innerWidth > 1600) {\n      return '70%';\n    }\n    else {\n      return '100%'\n    }\n  }\n\n  delay(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n\nexport class MemoryCard {\n\n  constructor(id, paarNr, aufgedeckt, pfad) {\n    this.id = id;\n    this.paarNr = paarNr;\n    this.aufgedeckt = aufgedeckt;\n    this.pfad = pfad;\n  }\n\n  id: number;\n  paarNr: number;\n  pfad: string;\n  aufgedeckt: boolean;\n  gefunden: boolean = false;\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <img src=\"../assets/logo.jpg\" style=\"height: 50px;\">\n  <label class=\"navbar-brand\" style=\"margin: 0; font-size: 24px\">JUNGSCHAR MEMORY</label>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <div class=\"dropdown\" style=\"margin-left: 20px; margin-top: 5px; margin-bottom: 5px;\">\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n          Schwierigkeit auswählen\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          <label class=\"dropdown-item\" (click)=\"levelChanged($event.target.id)\" [id]=\"20\">20 Karten</label>\n          <label class=\"dropdown-item\" (click)=\"levelChanged($event.target.id)\" [id]=\"40\">40 Karten</label>\n          <label class=\"dropdown-item\" (click)=\"levelChanged($event.target.id)\" [id]=\"60\">60 Karten</label>\n        </div>\n      </div>\n      <div class=\"dropdown\" style=\"margin-left: 20px; margin-top: 5px; margin-bottom: 5px;\">\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n          {{spielmodus}}\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          <label class=\"dropdown-item\" (click)=\"spielmodusChanged($event.target.id)\"\n            [id]=\"'Singleplayer'\">Singleplayer</label>\n          <label class=\"dropdown-item\" (click)=\"spielmodusChanged($event.target.id)\"\n            [id]=\"'Multiplayer'\">Multiplayer</label>\n        </div>\n      </div>\n      <li class=\"nav-item\">\n        <button type=\"button\" style=\"margin-left: 20px; margin-top: 5px; margin-bottom: 5px;\" class=\"btn btn-primary\"\n          (click)=\"initGame(currentLevel)\">Neustart</button>\n      </li>\n    </ul>\n  </div>\n</nav>\n<div class=\"container\" style=\"margin-left: 10px;\" *ngIf=\"spielmodus === 'Multiplayer'\">\n  <span style=\"float: left; font-size: 28px;\" [ngStyle]=\"{'font-weight': player === 1 ? 'bold' : 'normal'}\">Spieler 1:\n    {{playerOneScore}} </span>\n  <span style=\"font-size: 28px;\">&nbsp;|&nbsp;</span>\n  <span style=\"font-size: 28px;\" [ngStyle]=\"{'font-weight': player === 2 ? 'bold' : 'normal'}\">Spieler 2: {{playerTwoScore}}</span>\n</div>\n<h1 style=\"color: green; margin-left: 20px;\"\n  *ngIf=\"finish && spielmodus == 'Multiplayer' && playerOneScore > playerTwoScore\">Spieler 1 hat gewonnen! :)\n</h1>\n<h1 style=\"color: green; margin-left: 20px;\"\n  *ngIf=\"finish && spielmodus == 'Multiplayer' && playerOneScore < playerTwoScore\">Spieler 2 hat gewonnen! :)\n</h1>\n<h1 style=\"color: green; margin-left: 20px;\"\n  *ngIf=\"finish && spielmodus == 'Multiplayer' && playerOneScore === playerTwoScore\">Unentschieden! :)\n</h1>\n<h1 style=\"color: green; margin-left: 20px;\" *ngIf=\"finish && spielmodus == 'Singleplayer'\">SUPER, DU HAST DAS MEMORY\n  GESCHAFFT! :)</h1>\n<div style=\"margin-top: 0; margin-left: 10px;\" [style.width]=\"getButtonDivWidth()\">\n  <button type=\"button\" class=\"btn btn-default\" *ngFor=\"let item of karten\" [disabled]=\"item.gefunden\"\n    [ngStyle]=\"{'background-image': item.aufgedeckt ? item.pfad : 'url(../assets/logo.jpg)'}\"\n    [ngClass]=\"{ 'div-bild-offen' : item.aufgedeckt, 'div-bild-zu': !item.aufgedeckt}\" (click)=\"click(item)\"\n    [value]=\"item\">\n  </button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}